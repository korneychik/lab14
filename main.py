# coding=utf-8
import urllib
import xml.etree.ElementTree as et
from xml.dom import minidom
import sys
import time

import gevent


geos_ukr = ["Авдіївка", "Алмазна", "Алупка", "Алушта", "Алчевськ",
            "Амвросіївка", "Ананьїв", "Андрушівка",
            "Антрацит", "Апостолове", "Армянськ", "Артемівськ", "Артемівськ",
            "Артемове", "Арциз", "Балаклія",
            "Балта", "Бар", "Баранівка", "Барвінкове", "Батурин", "Бахмач",
            "Бахчисарай", "Баштанка", "Белз",
            "Бердичів", "Бердянськ", "Берегове", "Бережани", "Березань",
            "Березівка", "Березне", "Берестечко",
            "Берислав", "Бершадь", "Бібрка", "Біла Церква",
            "Білгород-Дністровський", "Білицьке", "Білогірськ",
            "Білозерське", "Білопілля", "Біляївка", "Бобринець", "Бобровиця",
            "Богодухів", "Богуслав", "Болград",
            "Болехів", "Борзна", "Борислав", "Бориспіль", "Борщів", "Боярка",
            "Бровари", "Броди", "Брянка",
            "Буринь", "Бурштин", "Буськ", "Буча", "Бучач", "Валки",
            "Василівка",
            "Васильків", "Ватутіне",
            "Вахрушеве", "Вашківці", "Великі Мости", "Верхівцеве",
            "Верхньодніпровськ", "Вижниця", "Вилкове",
            "Винники", "Виноградів", "Вишгород", "Вишневе", "Вільногірськ",
            "Вільнянськ", "Вінниця", "Вовчанськ",
            "Вознесенськ", "Волноваха", "Володимир-Волинський", "Волочиськ",
            "Ворожба", "Вуглегірськ", "Вугледар",
            "Гадяч", "Гайворон", "Гайсин", "Галич", "Генічеськ", "Герца",
            "Гірник", "Гірське", "Глиняни", "Глобине",
            "Глухів", "Гнівань", "Гола Пристань", "Горлівка", "Городенка",
            "Городище", "Городня", "Городок",
            "Городок", "Горохів", "Гребінка", "Гуляйполе", "Дебальцеве",
            "Деражня", "Дергачі", "Джанкой",
            "Дзержинськ", "Димитров", "Дніпродзержинськ", "Дніпропетровськ ",
            "Дніпрорудне", "Добромиль",
            "Добропілля", "Докучаєвськ", "Долина", "Долинська", "Донецьк",
            "Дрогобич", "Дружба", "Дружківка",
            "Дубляни", "Дубно", "Дубровиця", "Дунаївці", "Енергодар",
            "Євпаторія", "Єнакієве", "Жашків", "Жданівка",
            "Жидачів", "Житомир", "Жмеринка", "Жовква", "Жовті Води",
            "Заліщики", "Запоріжжя", "Заставна", "Збараж",
            "Зборів", "Звенигородка", "Здолбунів", "Зеленодольськ",
            "Зимогір'я",
            "Зіньків", "Зміїв", "Знам'янка",
            "Золоте", "Золотоноша", "Золочів", "Зоринськ", "Зугрес",
            "Івано-Франківськ", "Ізмаїл", "Ізюм",
            "Ізяслав", "Іллінці", "Іллічівськ", "Іловайськ", "Інкерман",
            "Ірміно", "Ірпінь", "Іршава", "Ічня",
            "Кагарлик", "Калинівка", "Калуш", "Кам'янець-Подільський",
            "Кам'янка-Бузька", "Кам'янка-Дніпровська",
            "Кам'янка", "Камінь-Каширський", "Канів", "Карлівка", "Каховка",
            "Керч", "Київ", "Ківерці", "Кілія",
            "Кіровоград", "Кіровськ", "Кіровське", "Кіцмань", "Кобеляки",
            "Ковель", "Кодима", "Козятин", "Коломия",
            "Комарно", "Комсомольськ", "Комсомольське", "Конотоп", "Копичинці",
            "Корець", "Коростень", "Коростишів",
            "Корсунь-Шевченківський", "Корюківка", "Косів", "Костопіль",
            "Костянтинівка", "Котовськ", "Краматорськ",
            "Красилів", "Красний Лиман", "Красний Луч", "Красноармійськ",
            "Красногорівка", "Красноград",
            "Краснодон", "Красноперекопськ", "Кременець", "Кременчук",
            "Кремінна", "Кривий Ріг ", "Кролевець",
            "Кузнецовськ", "Куп'янськ", "Курахове", "Ладижин", "Ланівці",
            "Лебедин", "Липовець", "Лисичанськ",
            "Лозова", "Лохвиця", "Лубни", "Луганськ", "Лутугине", "Луцьк",
            "Львів", "Любомль", "Люботин",
            "Макіївка", "Мала Виска", "Малин", "Мар'їнка", "Марганець",
            "Маріуполь", "Мелітополь", "Мена", "Мерефа",
            "Миколаїв", "Миколаїв", "Миколаївка", "Миргород", "Миронівка",
            "Міусинськ", "Могилів-Подільський",
            "Молодогвардійськ", "Молочанськ", "Монастириська", "Монастирище",
            "Моршин", "Моспине", "Мостиська",
            "Мукачеве", "Надвірна", "Немирів", "Нетішин", "Ніжин", "Нікополь",
            "Нова Каховка", "Нова Одеса",
            "Новгород-Сіверський", "Новий Буг", "Новий Калинів",
            "Новий Розділ",
            "Новоазовськ", "Нововолинськ",
            "Новоград-Волинський", "Новогродівка", "Новодністровськ",
            "Новодружеськ", "Новомиргород",
            "Новомосковськ", "Новоселиця", "Новоукраїнка", "Новояворівськ",
            "Носівка", "Обухів", "Овруч", "Одеса",
            "Олевськ", "Олександрівськ", "Олександрія", "Орджонікідзе",
            "Оріхів", "Остер", "Острог", "Охтирка",
            "Очаків", "П'ятихатки", "Павлоград", "Первомайськ", "Первомайськ",
            "Первомайський", "Перевальськ",
            "Перемишляни", "Перечин", "Перещепине", "Переяслав-Хмельницький",
            "Першотравенськ", "Петровське",
            "Пирятин", "Південне", "Підгайці", "Підгородне", "Погребище",
            "Пологи", "Полонне", "Полтава", "Помічна",
            "Попасна", "Почаїв", "Привілля", "Прилуки", "Приморськ",
            "Прип'ять",
            "Пустомити", "Путивль",
            "Рава-Руська", "Радехів", "Радивилів", "Радомишль", "Рахів",
            "Рені",
            "Ржищів", "Рівне", "Ровеньки",
            "Рогатин", "Родинське", "Рожище", "Роздільна", "Ромни", "Рубіжне",
            "Рудки", "Саки", "Самбір", "Сарни",
            "Свалява", "Сватове", "Свердловськ", "Світловодськ",
            "Світлодарськ",
            "Святогірськ ", "Севастополь",
            "Селидове", "Семенівка", "Середина-Буда", "Сєвєродонецьк",
            "Синельникове", "Сіверськ", "Сімферополь",
            "Скадовськ", "Скалат", "Сквира", "Сколе", "Славута", "Славутич",
            "Слов'янськ", "Сміла", "Снігурівка",
            "Сніжне", "Снятин", "Сокаль", "Сокиряни", "Соледар", "Соснівка",
            "Старий Крим", "Старий Самбір",
            "Старобільськ", "Старокостянтинів", "Стаханов", "Стебник",
            "Сторожинець", "Стрий", "Судак",
            "Судова Вишня", "Суми", "Суходільськ", "Таврійськ", "Тальне",
            "Тараща", "Татарбунари", "Теплодар",
            "Теребовля", "Тернівка", "Тернопіль", "Тетіїв", "Тисмениця",
            "Тлумач", "Токмак", "Торез", "Тростянець",
            "Трускавець", "Тульчин", "Турка", "Тячів", "Угнів", "Ужгород",
            "Узин", "Українка", "Українськ",
            "Ульяновка", "Умань", "Устилуг", "Фастів", "Феодосія", "Харків",
            "Харцизьк", "Херсон", "Хирів",
            "Хмельницький", "Хмільник", "Ходорів", "Хорол", "Хоростків",
            "Хотин", "Христинівка", "Хуст",
            "Цюрупинськ", "Часів Яр", "Червоноград", "Червонозаводське",
            "Червонопартизанськ", "Черкаси",
            "Чернівці", "Чернігів", "Чигирин", "Чоп", "Чорнобиль", "Чортків",
            "Чугуїв", "Чуднів", "Шаргород",
            "Шахтарськ", "Шепетівка", "Шостка", "Шпола", "Шумськ", "Щастя",
            "Щолкіне", "Щорс", "Южне",
            "Южноукраїнськ", "Юнокомунарівськ", "Яворів", "Яготин", "Ялта",
            "Ямпіль", "Яремче", "Ясинувата"]

geos_ru = ["Киев", "Харьков", "Одесса", "Днепропетровск", "Донецк",
           "Запорожье",
           "Львов", "Кривой Рог", "Николаев",
           "Мариуполь", "Луганск", "Винница", "Макеевка", "Севастополь",
           "Симферополь", "Херсон", "Полтава", "Чернигов",
           "Черкассы", "Житомир", "Сумы", "Хмельницкий", "Черновцы",
           "Горловка",
           "Ровно", "Днепродзержинск",
           "Кировоград", "Ивано-Франковск", "Кременчуг", "Тернополь", "Луцк",
           "Белая Церковь", "Краматорск",
           "Мелитополь", "Керчь", "Никополь", "Славянск", "Ужгород",
           "Бердянск",
           "Алчевск", "Павлоград", "Северодонецк",
           "Евпатория", "Лисичанск", "Каменец-Подольский", "Александрия",
           "Красный Луч", "Енакиево", "Стаханов",
           "Константиновка"]


def getAllGeosFromSite(URL):
    """
    Возвращает все географические названия с сайта по заданному URL
    """
    page = urllib.urlopen(URL).read()
    # print page

    return [(x, page.count(x)) for x in geos_ukr + geos_ru if
            page.count(x) > 0]


def getUrlsFromXml(file):
    """
    Возвращает список всех URL с заданого входного файла
    """
    tree = et.parse(file)
    root = tree.getroot()
    urls = []
    for child in root:
        urls.append(child.text)
    return urls


def translit(str):
    """
    Превращает кирилицу(рус. и укр.) в транслит.
    Київ -> kyyiv
    """
    map = {u"й": "y",
           u"ц": "ts",
           u"у": "u",
           u"к": "k",
           u"е": "e",
           u"н": "n",
           u"г": "h",
           u"ш": "sh",
           u"щ": "shch",
           u"з": "z",
           u"х": "kh",
           u"ж": "zh",
           u"д": "d",
           u"л": "l",
           u"о": "o",
           u"р": "r",
           u"п": "p",
           u"а": "a",
           u"в": "v",
           u"ф": "f",
           u"я": "ya",
           u"ч": "ch",
           u"с": "s",
           u"м": "m",
           u"и": "y",
           u"т": "t",
           u"ь": "",
           u"б": "b",
           u"ю": "yu",
           u"ї": "yi",
           u"і": "i",
           u"є": "ye",
           u"ъ": "",
           u"ы": "y",
           u"ё": "yo",
           u"э": "e"}

    return "".join(
        map[x] if x in map else x for x in str.decode('utf-8').lower())


def run(infile="urls.xml", outfile="out.xml"):
    """
    Выполняет задание лабораторной работы №1, вариант 4
    """
    start = time.time()

    urls = getUrlsFromXml(infile)

    root = et.Element("data")

    for url in urls:
        lst = getAllGeosFromSite(url)
        site = et.Element("site")
        site.attrib["url"] = url

        if lst is None:
            lst = []

        i = 0
        for name_info in lst:
            sys.stdout.write(url + " - " + str(100 * i / len(lst)) + "%\r")
            sys.stdout.flush()
            time.sleep(.02)

            name = et.Element("name")

            name.text = name_info[0].decode('utf-8')\
                                    .encode('ascii', 'xmlcharrefreplace')

            name.attrib["id"] = translit(name_info[0])
            name.attrib["freq"] = str(name_info[1])

            site.append(name)

            i += 1

        root.append(site)
        print url + " done, total " + str(len(lst)) + " names"

    rough_string = et.tostring(root)
    reparsed = minidom.parseString(rough_string)
    reparsed = reparsed.toprettyxml()

    outXml = open(outfile, "w")
    outXml.write(reparsed)
    outXml.flush()
    outXml.close()
    print "done, total time: " + str(round(time.time() - start, 1)) + "s"


def runGevent(infile="urls.xml", outfile="out.xml"):
    """
    Выполняет задание лабораторной работы №1, вариант 4.
    Использует gevent.
    """
    start = time.time()

    urls = getUrlsFromXml(infile)

    root = et.Element("data")

    def work(url):
        lst = getAllGeosFromSite(url)
        site = et.Element("site")
        site.attrib["url"] = url

        if lst is None:
            lst = []

        i = 0
        for name_info in lst:
            sys.stdout.write(url + " - " + str(100 * i / len(lst)) + "%\r")
            sys.stdout.flush()
            gevent.sleep(.01)

            name = et.Element("name")
            name.text = name_info[0].decode('utf-8') \
                .encode('ascii', 'xmlcharrefreplace')
            name.attrib["id"] = translit(name_info[0])
            name.attrib["freq"] = str(name_info[1])

            site.append(name)

            i += 1

        root.append(site)
        print url + " done, total " + str(len(lst)) + " names"

    jobs = [gevent.spawn(work, url) for url in urls]

    gevent.joinall(jobs)

    rough_string = et.tostring(root)
    reparsed = minidom.parseString(rough_string)
    reparsed = reparsed.toprettyxml()

    outXml = open(outfile, "w")
    outXml.write(reparsed)
    outXml.flush()
    outXml.close()
    print "done, total time: " + str(round(time.time() - start, 1)) + "s"
